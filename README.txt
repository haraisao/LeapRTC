======================================================================
  RTComponent: LeapRTC specificatioin

  OpenRTM-aist-1.0.0
  Date: $Date$

  This file is generated by rtc-template with the following argments.

#   rtc-template -bcxx --module-name=LeapRTC 
#   --module-desc='Leap Motion RTC' --module-version=1.0.0 --module-vendor=Sugar Sweet Robotics 
#   --module-category=input --module-comp-type=STATIC 
#   --module-act-type=PERIODIC --module-max-inst=1 
#   --config=debug:int:0 
#   --outport=frame:ssr::Frame --outport=gesture:ssr::GestureFrame 

======================================================================
    How To Build
======================================================================

* Set Environmental Variable LEAP_SDK_PATH to your LeapDevelopmentKit 
 as you can find Leap.h by ( $LEAP_SDK_PATH/include/Leap.h )
* Then, cmake and make.

$ cd $path_to_leaprtc
$ mkdir build
$ cd build
$ cmake ../
$ make 

Then you can find your LeapRTC in $path_to_leaprtc/build/src directory.
You must put libleap.dylib in the same directory of your RTC. 
If you use LeapRTCComp, you must put the libleap.dylib with it.
If you use LeapRTC.dylib as a loadable module for rtcd, you must put the libleap.dylib with the LeapRTC.dylib.

======================================================================
    Basic Information
======================================================================
# <rtc-template block="module">
Module Name: LeapRTC
Description: Leap Motion RTC
Version:     1.0.0
Vendor:      Sugar Sweet Robotics
Category:    input
Kind:        DataFlowComponent
Comp. Type:  STATIC
Act. Type:   PERIODIC
MAX Inst.:   1
Lang:        C++
Lang Type:   

# </rtc-template>


======================================================================
    Activity definition
======================================================================

[on_initialize]    implemented

[on_finalize]

[on_startup]

[on_shutdown]

[on_activated] implemented 

[on_deactivated] implemented

[on_execute] implemented

[on_aborting]

[on_error]

[on_reset]

[on_state_update]

[on_rate_changed]

======================================================================
    InPorts definition
======================================================================
# <rtc-template block="inport">


# </rtc-template>

======================================================================
    OutPorts definition
======================================================================
# <rtc-template block="outport">

	Name:        frame
	PortNumber:  0
	Description: 
	PortType: 
	DataType:    ssr::Frame
	MaxOut: 
	[Data Elements]
		Name:
		Type:            
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        gesture
	PortNumber:  1
	Description: 
	PortType: 
	DataType:    ssr::GestureFrame
	MaxOut: 
	[Data Elements]
		Name:
		Type:            
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>


======================================================================
    Service Port definition
======================================================================
# <rtc-template block="serviceport">
# </rtc-template> 

======================================================================
    Configuration definition
======================================================================
# <rtc-template block="configuration">
	Configuration:
		Name:             debug
		Description:     
		Type:            int
		DefaultValue:     0
		Unit:            
		Range:           
		Constraint:      

# </rtc-template> 

This software is developed at the National Institute of Advanced
Industrial Science and Technology. Approval number H23PRO-????. This
software is licensed under the Lesser General Public License. See
COPYING.LESSER.

This area is reserved for future OpenRTM.

